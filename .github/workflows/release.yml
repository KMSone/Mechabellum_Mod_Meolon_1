name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: Release
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up toolchain
        # flatbuffers-compiler at version 2.0.6 is only available on 22.10 but we don't need it anyway
        # run: sudo apt install -y mono-devel flatbuffers-compiler=2.0.6
        run: sudo apt install -y mono-devel
      - name: Install dependencies
        run: nuget restore SlzSpeedrunTools.sln
      - name: Load changeset
        id: changeset
        run: |
          set -eux
          files=$(find ./changesets -name "*.md" -not -name "README.md")
          if [[ -z "$files" ]]; then
            echo "::warning::No changesets found."
            exit 0
          fi
          filename=$(echo "$files" | head -n1)
          info=$(basename -- "$filename" .md)
          IFS='_' read -ra ADDR <<< "$info"
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)

          echo "game=${ADDR[0]}" >> "$GITHUB_OUTPUT"
          echo "project=${ADDR[1]}" >> "$GITHUB_OUTPUT"
          echo "version_bump_type=${ADDR[2]}" >> "$GITHUB_OUTPUT"
          echo "changelog_description<<$EOF" >> "$GITHUB_OUTPUT"
          cat "$filename" >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"
      - name: Bump version
        id: bump_version
        env:
          GAME: ${{ steps.changeset.outputs.game }}
          PROJECT: ${{ steps.changeset.outputs.project }}
          VERSION_BUMP_TYPE: ${{ steps.changeset.outputs.version_bump_type }}
          CHANGELOG_DESCRIPTION: ${{ steps.changeset.outputs.changelog_description }}
        run: csi ./scripts/Release.csx "$GAME" "$PROJECT" "$VERSION_BUMP_TYPE" "$CHANGELOG_DESCRIPTION"
      - name: Build
        run: msbuild /property:Configuration=Release
      - name: Upload to Thunderstore
        if: steps.bump_version.outputs.release_thunderstore == 'true'
        env:
          GAME: ${{ steps.changeset.outputs.game }}
          PROJECT: ${{ steps.changeset.outputs.project }}
          NEW_VERSION: ${{ steps.bump_version.outputs.new_version }}
          THUNDERSTORE_API_TOKEN: ${{ secrets.THUNDERSTORE_API_TOKEN }}
        run: csi ./scripts/UploadThunderstore.csx "$GAME" "$PROJECT" "$NEW_VERSION"
      - name: Copy LiveSplit build for commit
        if: steps.bump_version.outputs.release_livesplit == 'true'
        env:
          GAME: ${{ steps.changeset.outputs.game }}
          PROJECT: ${{ steps.changeset.outputs.project }}
        run: |
          set -eux
          DLL_NAME="${{ steps.changeset.outputs.project }}.dll"
          cd "./projects/${{ steps.changeset.outputs.game }}/${{ steps.changeset.outputs.project }}"
          mkdir -p "./Components"
          cp "./bin/Release/$DLL_NAME" "./Components/$DLL_NAME"
      - name: Commit version bump
        run: |
          set -eux
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Release" --no-verify
          git push --no-verify
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          target_commitish: ${{ github.sha }}
          tag_name: "${{ steps.changeset.outputs.game }}${{ steps.changeset.outputs.project }}_v${{ steps.bump_version.outputs.new_version }}"
          body: ${{ steps.bump_version.outputs.changelog }}
          files: |
            ./projects/${{ steps.changeset.outputs.game }}/${{ steps.changeset.outputs.project }}/thunderstore/*.zip
            ./projects/${{ steps.changeset.outputs.game }}/${{ steps.changeset.outputs.project }}/bin/Release/${{ steps.changeset.outputs.project }}.dll

// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Bwr
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Level : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_8(); }
  public static Level GetRootAsLevel(ByteBuffer _bb) { return GetRootAsLevel(_bb, new Level()); }
  public static Level GetRootAsLevel(ByteBuffer _bb, Level obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Level __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// In seconds since Metadata.start_time not including loads
  public float StartTime { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  /// In seconds
  public float Duration { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  /// Time spent loading before this level in seconds
  public float LoadDuration { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  /// Level number
  public int SceneIndex { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Byte offset of first frame of level within the file
  public int FrameOffset { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Bwr.Level> CreateLevel(FlatBufferBuilder builder,
      float start_time = 0.0f,
      float duration = 0.0f,
      float load_duration = 0.0f,
      int scene_index = 0,
      int frame_offset = 0) {
    builder.StartTable(5);
    Level.AddFrameOffset(builder, frame_offset);
    Level.AddSceneIndex(builder, scene_index);
    Level.AddLoadDuration(builder, load_duration);
    Level.AddDuration(builder, duration);
    Level.AddStartTime(builder, start_time);
    return Level.EndLevel(builder);
  }

  public static void StartLevel(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddStartTime(FlatBufferBuilder builder, float startTime) { builder.AddFloat(0, startTime, 0.0f); }
  public static void AddDuration(FlatBufferBuilder builder, float duration) { builder.AddFloat(1, duration, 0.0f); }
  public static void AddLoadDuration(FlatBufferBuilder builder, float loadDuration) { builder.AddFloat(2, loadDuration, 0.0f); }
  public static void AddSceneIndex(FlatBufferBuilder builder, int sceneIndex) { builder.AddInt(3, sceneIndex, 0); }
  public static void AddFrameOffset(FlatBufferBuilder builder, int frameOffset) { builder.AddInt(4, frameOffset, 0); }
  public static Offset<Bwr.Level> EndLevel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Bwr.Level>(o);
  }
}


}
